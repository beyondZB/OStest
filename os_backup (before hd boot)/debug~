进程表:				gs		fs		es		ds
				edi		esi		ebp		esp
				ebx		edx		ecx		eax
				retaddr		eip		cs		eflags
				esp		ss		taskkernelstack	taskregsbackup

a调用hdidentify到sys_call写进程表:-------------------------------------------------------------
0x00054cc0 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054cd0 <bogus+      16>:	0x00000000	0x00000000	0x00043f4c	0x00054cf0
0x00054ce0 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000002
0x00054cf0 <bogus+      48>:	0x00030445	0x0003197c	0x00000007	0x00001202
0x00054d00 <bogus+      64>:	0x00043f38	0x0000000f	0x00054ca0	0x00054d24

备份进程表:
0x00054d24 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054d34 <bogus+      16>:	0x00000000	0x00000000	0x00043f4c	0x00054cf0
0x00054d44 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000002
0x00054d54 <bogus+      48>:	0x00030445	0x0003197c	0x00000007	0x00001202
0x00054d64 <bogus+      64>:	0x00043f38	0x0000000f	0x00054ca0	0x00054d24

syshdidentify结束回到syscall恢复环境:----------------------------------------------------------
未将eax写入,且没有从备份进程表中恢复的a进程表
0x00054cc0 <bogus+       0>:	0x0000001b	0x0000000f	0x00000010	0x00000010
0x00054cd0 <bogus+      16>:	0x00000000	0x00054cc0	0x00054c34	0x00054cf0
0x00054ce0 <bogus+      32>:	0x00000000	0x000001f7	0x00000000	0x00054cc0
0x00054cf0 <bogus+      48>:	0x00000000	0x00031919	0x00000008	0x00001002
0x00054d00 <bogus+      64>:	0x00054c2c	0x00000010	0x00054ca0	0x00054d24

将eax写入后,a的进程表:
0x00054cc0 <bogus+       0>:	0x0000001b	0x0000000f	0x00000010	0x00000010
0x00054cd0 <bogus+      16>:	0x00000000	0x00054cc0	0x00054c34	0x00054cf0
0x00054ce0 <bogus+      32>:	0x00000000	0x000001f7	0x00000000	0x00000000
0x00054cf0 <bogus+      48>:	0x00000000	0x00031919	0x00000008	0x00001002
0x00054d00 <bogus+      64>:	0x00054c2c	0x00000010	0x00054ca0	0x00054d24

将eax写入前,a备份表:
0x00054d24 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054d34 <bogus+      16>:	0x00000000	0x00000000	0x00043f4c	0x00054cf0
0x00054d44 <bogus+      32>:	0x00000000	0x00000000	0x0000001b	0x0000000f
0x00054d54 <bogus+      48>:	0x00030010	0x00030010	0x00000000	0x00054cc0
0x00054d64 <bogus+      64>:	0x00054c34	0x00054d7c	0x00054cc0	0x000001f7





====================================================================================
1.b第一次调用系统调用getticks
0x00054d8c <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054d9c <bogus+      16>:	0x00000000	0x00000000	0x0003bf3c	0x00054dbc
0x00054dac <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00054dbc <bogus+      48>:	0x00000000	0x0003197c	0x00000007	0x00001206
0x00054dcc <bogus+      64>:	0x0003bf28	0x0000000f	0x0004cca0	0x00054df0

备份表:
0x00054df0 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054e00 <bogus+      16>:	0x00000000	0x00000000	0x0003bf3c	0x00054dbc
0x00054e10 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000000
0x00054e20 <bogus+      48>:	0x00000000	0x0003197c	0x00000007	0x00001206
0x00054e30 <bogus+      64>:	0x0003bf28	0x0000000f	0x0004cca0	0x00054df0

恢复环境时:
修改完eax的b进程表 返回值为1
0x00054d8c <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054d9c <bogus+      16>:	0x00000000	0x00000000	0x0003bf3c	0x00054dbc
0x00054dac <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000001
0x00054dbc <bogus+      48>:	0x00000000	0x0003197c	0x00000007	0x00001206
0x00054dcc <bogus+      64>:	0x0003bf28	0x0000000f	0x0004cca0	0x00054df0

修改完eax的b备份表
0x00054df0 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054e00 <bogus+      16>:	0x00000000	0x00000000	0x0003bf3c	0x00054dbc
0x00054e10 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000001
0x00054e20 <bogus+      48>:	0x00000000	0x0003197c	0x00000007	0x00001206
0x00054e30 <bogus+      64>:	0x0003bf28	0x0000000f	0x0004cca0	0x00054df0

从备份表恢复的b进程表:
0x00054df0 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054e00 <bogus+      16>:	0x00000000	0x00000000	0x0003bf3c	0x00054dbc
0x00054e10 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000001
0x00054e20 <bogus+      48>:	0x00000000	0x0003197c	0x00000007	0x00001206
0x00054e30 <bogus+      64>:	0x0003bf28	0x0000000f	0x0004cca0	0x00054df0

------------------------------------------------------------------------------------
2. a调用hdvarify系统调用
进入时a进程表:
0x00054cc0 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054cd0 <bogus+      16>:	0x00000000	0x00000000	0x00043f4c	0x00054cf0
0x00054ce0 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000002
0x00054cf0 <bogus+      48>:	0x00030445	0x0003197c	0x00000007	0x00001202
0x00054d00 <bogus+      64>:	0x00043f38	0x0000000f	0x00054ca0	0x00054d24

备份表:
0x00054d24 <bogus+       0>:	0x0000001b	0x0000000f	0x0000000f	0x0000000f
0x00054d34 <bogus+      16>:	0x00000000	0x00000000	0x00043f4c	0x00054cf0
0x00054d44 <bogus+      32>:	0x00000000	0x00000000	0x00000000	0x00000002
0x00054d54 <bogus+      48>:	0x00030445	0x0003197c	0x00000007	0x00001202
0x00054d64 <bogus+      64>:	0x00043f38	0x0000000f	0x00054ca0	0x00054d24


a block应该保存的环境
eax: 0x00054cc0 347328
ecx: 0x00000000 0
edx: 0x000001f7 503
ebx: 0x00000000 0
esp: 0x00054c2c 347180
ebp: 0x00054c34 347188
esi: 0x00054cc0 347328
edi: 0x00000000 0
eip: 0x0003080a
eflags 0x00001002: id vip vif ac vm rf nt IOPL=1 of df if tf sf zf af pf cf

实际保存的a进程表(为什么段寄存器变成10???????????)
0x00054cc0 <bogus+       0>:	0x0000001b	0x0000000f	0x00000010	0x00000010
0x00054cd0 <bogus+      16>:	0x00000000	0x00054cc0	0x00054c34	0x00054cf0
0x00054ce0 <bogus+      32>:	0x00000000	0x000001f7	0x00000000	0x00054cc0
0x00054cf0 <bogus+      48>:	0x00000000	0x00031919	0x00000008	0x00001002
0x00054d00 <bogus+      64>:	0x00054c2c	0x00000010	0x00054ca0	0x00054d24

